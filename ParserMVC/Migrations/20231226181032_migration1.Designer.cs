// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using parser.Services;

#nullable disable

namespace ParserMVC.Migrations
{
    [DbContext(typeof(MyApplicationContext))]
    [Migration("20231226181032_migration1")]
    partial class migration1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("parser.Models.Entities.Category", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Name = "Категория"
                        });
                });

            modelBuilder.Entity("parser.Models.Entities.Product", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoryID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<uint>("Price")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ShopID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("CategoryID");

                    b.HasIndex("ShopID");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CategoryID = 1,
                            Name = "Зеркало",
                            Price = 0u,
                            ShopID = 1,
                            Url = "https://fixsen.ru/product/hotel-zerkalo-kosmeticheskoe-chernoe-d15-fx-31021b/"
                        },
                        new
                        {
                            ID = 2,
                            CategoryID = 1,
                            Name = "Газовый котёл",
                            Price = 0u,
                            ShopID = 2,
                            Url = "https://neptun66.ru/catalog/kotly_i_vse_dlya_otopleniya/nastennyy_gazovyy_dvukhkonturnyy_kotel_federica_bugatti_varme_18/"
                        });
                });

            modelBuilder.Entity("parser.Models.Entities.Shop", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ShopName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Shops");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            ShopName = "Fixen",
                            Url = "https://fixsen.ru"
                        },
                        new
                        {
                            ID = 2,
                            ShopName = "Нептун66",
                            Url = "https://neptun66.ru"
                        });
                });

            modelBuilder.Entity("parser.Models.Entities.Product", b =>
                {
                    b.HasOne("parser.Models.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("parser.Models.Entities.Shop", "Shop")
                        .WithMany()
                        .HasForeignKey("ShopID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Shop");
                });
#pragma warning restore 612, 618
        }
    }
}
